@import "../../globals/normalize.scss";
@import "../../globals/mixins";

:host {
  input:focus + .radiobtn {
    box-shadow: 0px 0px 0px 1px var(--color-primary-active);
  }

  /* Custom labels: the container */
  .label {
    display: flex;
    align-items: center;
    position: relative;
    cursor: pointer;
    @include form-element-common-styles-label();
  }

  /* Hide the browser's default checkbox */
  .label input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }

  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: transparent;
  }

  /* On mouse-over, add a grey background color */
  .label:hover input ~ .checkmark {
    background-color: transparent;
  }

  /* When the checkbox is checked, add a blue background */
  .label input:checked ~ .checkmark {
    background-color: #2196f3;
  }

  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }

  /* Show the checkmark when checked */
  .label input:checked ~ .checkmark:after {
    display: block;
  }

  /* Style the checkmark/indicator */
  .label .checkmark:after {
    left: 10px;
    top: 6px;
    width: 7px;
    height: 12px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }

  /* Create a custom radio button */
  .radiobtn {
    display: inline-block;
    height: var(--spacing-comp-04);
    width: var(--spacing-comp-04);
    background-color: transparent;
    border-radius: 50%;
    border-color: var(--gray-04);
    border-style: var(--border-style-regular);
    border-width: var(--border-width-sm);
    position: relative;
    margin-inline-end: var(--spacing-comp-02);
    flex-shrink: 0;
    box-shadow: 0px 0px 0px 1px transparent;
    box-sizing: border-box;

    &--error {
      border-color: var(--color-error-dark) !important;
      background: rgba(var(--color-error-dark-rgb), 0.1) !important;
      &:after {
        background-color: var(--color-error-dark) !important;
      }
    }
  }

  /* On mouse-over, add a grey background color */
  .label:hover input ~ .radiobtn {
    background-color: transparent;
  }

  /* When the radio button is checked, add a blue background */
  .label input[checked] ~ .radiobtn {
    background-color: transparent;
    border-color: var(--color-primary-active);
  }

  /* Create the indicator (the dot/circle - hidden when not checked) */
  .radiobtn:after {
    content: "";
    position: absolute;
    display: block;
    width: 8px;
    height: 8px;
    transform: scale(0, 0);
    @include ui-animation(transform);
  }

  /* Show the indicator (dot/circle) when checked */
  .label input[checked] ~ .radiobtn:after {
    display: block;
    transform: scale(1, 1);
  }
  // disabled
  .label input[disabled] ~ .radiobtn {
    border-color: var(--gray-02-hc);
  }
  .label input[disabled] ~ .radiobtn:after {
    background-color: var(--gray-02-hc);
  }
  /* Style the indicator (dot/circle) */
  .label .radiobtn:after {
    top: 3px;
    left: 3px;
    border-radius: 50%;
    background: var(--color-primary-active);
  }
}
:host([disabled="true"]) label {
  cursor: not-allowed;
}
