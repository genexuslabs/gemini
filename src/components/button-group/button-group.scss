@import "../../globals/normalize.scss";
@import "../../globals/mixins";

:host(.button-group) {
  display: inline-block;
  line-height: 0;
  outline: none;

  .button-group-header-label {
  }
  .button-group-container {
    font-size: 0; //removes the space between buttons
    position: relative;
  }

  ::slotted(button) {
    @include gxg-button-styles;
    /*button styles are included on a mixin, because they are used on both, gxg-button, and gxg-button-group elements*/
    @include gxg-label--negative;

    /*button styles overrides*/
    border-radius: 0;
    background-color: var(--gray-00);
    color: var(--color-primary);
    border-inline-end: 1px solid var(--gray-02);
    padding-left: var(--spacing-comp-03);
    padding-right: var(--spacing-comp-03);
    height: 20px;
  }
  ::slotted(button:first-child) {
    border-top-left-radius: var(--border-radius-md);
    border-bottom-left-radius: var(--border-radius-md);
  }
  ::slotted(button:last-child) {
    border-top-right-radius: var(--border-radius-md);
    border-bottom-right-radius: var(--border-radius-md);
  }

  ::slotted(button:hover) {
    cursor: pointer;
    color: var(--color-on-primary);
    background: var(--color-primary-hover);
  }
  ::slotted(button:focus) {
    outline: none;
  }
  ::slotted(button[data-active]) {
    color: var(--color-on-primary);
    background-color: var(--color-primary-enabled);
    border-right-color: var(--color-primary-enabled);
    pointer-events: none;
  }
  ::slotted(button:not([data-active])):hover,
  ::slotted(button:not([outlined])):hover {
    background-color: var(--color-primary-hover);
  }
}
/*Disabled*/
:host(:not([outlined])) {
  ::slotted(button[data-active]) {
    --gxg-border-color--focused: var(--color-primary-active--inverted);
    color: var(--color-on-primary);
    background-color: var(--color-primary-enabled);
    border-right-color: var(--color-primary-enabled);
  }
  ::slotted(button[disabled]) {
    background-color: var(--gxg-background-color--disabled);
    color: var(--gxg-color--disabled);
    border-inline-end-color: var(--gxg-border-color--disabled);
    pointer-events: none;
  }
}
:host([outlined]) {
  ::slotted(button[disabled]),
  ::slotted(button[data-active][disabled]) {
    background-color: var(--color-background);
    color: var(--gxg-color--disabled);
    border-color: var(--gxg-border-color--disabled);
    pointer-events: none;
    cursor: cell;
  }
}
:host(.button-group:not([disabled])) {
  ::slotted(button:focus) {
    outline: none;
    @include form-element-common-styles-focus-type-1();
  }
}
//reading directior rtl
:host(.rtl) {
  ::slotted(button:last-child) {
    border-top-left-radius: var(--border-radius-md);
    border-bottom-left-radius: var(--border-radius-md);
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  ::slotted(button:first-child) {
    border-top-right-radius: var(--border-radius-md);
    border-bottom-right-radius: var(--border-radius-md);
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  ::slotted(button) {
    border-left: 1px solid var(--gray-02);
    border-right: 0;
  }
  ::slotted(button:last-child) {
    border-left: 0;
  }
}
/*OUTLINED*/
:host(.button-group:not([outlined])) {
  ::slotted(button:last-child) {
    border-right: none;
  }
}
:host([outlined]) ::slotted(button) {
  background: var(--color-background);
  border-width: var(--border-width-sm);
  border-style: var(--border-style-regular);
  border-color: var(--color-primary-enabled);
}
:host([outlined]) ::slotted(button[data-active]) {
  color: var(--color-primary-hover);
  background-color: var(--color-primary-hover-opacity-01);
}
:host([outlined]) ::slotted(button:hover) {
  color: var(--color-primary-hover);
  background-color: var(--color-primary-hover-opacity-01);
}
:host([outlined]) ::slotted(button:not(:last-child)) {
  border-right: 0;
}
:host(.button-group:not([outlined])) {
  ::slotted(button:last-child) {
    border-right: none;
  }
}
/*CENTER*/
:host([title-alignment="center"]) {
  /*Title alignment*/
  .button-group-header-title {
    justify-content: center;
  }
}
:host([title-alignment="right"]) {
  /*Title alignment*/
  .button-group-header-title {
    justify-content: flex-end;
  }
}

//full width
:host([full-width]) {
  display: block;
  width: 100%;

  .button-group-container {
    display: flex;
  }
}
:host([full-width]) {
  .button-group-container {
    ::slotted(*) {
      flex: 1 1 auto !important;
    }
  }
}

/*********************************************
LARGE VERSION (html tag has 'gxg-large' class)
**********************************************/
:host(.button-group.large) {
  .button-group-header-title {
    font-size: var(--font-size-lg);
  }
  ::slotted(button) {
    height: var(--spacing-comp-05);
    font-size: var(--font-size-lg) !important;
  }
}
