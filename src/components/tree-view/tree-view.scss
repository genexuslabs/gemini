@import "../../globals/mixins.scss";

/*---------------------------
gxg-tree-view
---------------------------*/
gxg-tree-view {
  font-family: var(--font-family-primary);
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-regular);
  color: var(--color-on-background);
  display: contents;

  ch-tree-x .ch-tree-x-container {
    padding: var(--spacing-comp-01);
  }
}

/*custom styles for the property */
.tree-view {
  @include gxg-scrollbar;
}

gxg-tree-view[position-relative] {
  ch-tree-x .ch-tree-x-container {
    position: relative;
    width: 100%;
  }
}

/*padding (added by Gemini)*/
gxg-tree-view[no-padding] {
  ch-tree-x .ch-tree-x-container {
    padding: 0;
  }
}

:not(.ch-tree-x-dragging-item)
  ch-tree-x-list-item:not([selected])::part(header):hover {
  //to do
  // background-color: rgb(232, 232, 233);
}

.ch-tree-x-list-item--drag-enter {
  //to do
  // background-color: #eee;
  // box-shadow: inset 0 0 1px 0px black;

  // &[selected]::part(header) {
  //   background-color: #eee;
  // }
}

/*---------------------------
ch-tree-x-list-item
---------------------------*/

ch-tree-x-list-item {
  --checkbox-size: var(--gxg-checkbox-size);
  .tree-view-item::part(dashed-line) {
    border-color: var(--gray-02);
  }

  //dynamic icons (second state)
  &.tree-view-item--folder::part(action)::before,
  &.tree-view-item--module::part(action)::before {
    grid-area: left-img;
    content: "";
    width: 14px;
    height: 14px;
    margin-inline-end: 4px;
    background-repeat: no-repeat;
  }

  &.tree-view-item--folder::part(action)::before {
    background-image: url("/build/icon-assets/objects/folder.svg");
  }
  &.tree-view-item--folder::part(action expanded)::before {
    background-image: url("/build/icon-assets/objects/folder-open.svg");
  }
  &.tree-view-item--module::part(action)::before {
    background-image: url("/build/icon-assets/objects/module.svg");
  }
  &.tree-view-item--module::part(action expanded)::before {
    background-image: url("/build/icon-assets/objects/module-open.svg");
  }

  //pending commit
  .tree-view-item--pending-commit::part(action)::before {
    content: "";
    position: relative;
    z-index: 1;
    grid-area: left-img;
    width: 5px;
    height: 5px;
    align-self: end;
    margin-block-end: 3px;
    margin-inline-start: 1px;
    background-color: rgb(44, 59, 146);
    border-radius: 50%;
  }

  //css variables overrides
  --expandable-button-width: var(--spacing-comp-04);

  //header (no)
  &::part(header):first-child {
    margin-inline-start: var(--spacing-comp-01);
  }
  &::part(header) {
    //padding-inline-start: var(--spacing-comp-01);
    padding-inline-end: calc(var(--spacing-comp-02) * 0.65);
    border: 1px solid transparent;
    height: var(--spacing-comp-05);

    &:hover {
      background-color: var(--gxg-background-color--hover);
      color: var(--gxg-color--hover);
    }

    &:focus {
      @include form-element-common-styles-focus-type-1();
    }

    display: flex;
    gap: var(--spacing-comp-01);
  }
  &[selected]::part(header) {
    background-color: var(--gxg-background-color--selected);
    &:hover {
      background-color: var(--gxg-background-color--selected-hover);
    }
  }
  &.ch-tree-x-list-item--editing::part(header) {
    //to do
    // background-color: rgb(207, 222, 230, 0.5);
    // border-color: transparent;
  }
  &:not(.ch-tree-x-list-item--editing)::part(header):focus-visible {
    //to do
    // border-color: black;
    // z-index: 1; // Place the outline above the content
  }

  //expandable-button
  &::part(expandable-button) {
    background-color: var(--color-hover);
    // margin-inline-start: var(--spacing-comp-01);
    // margin-inline-end: var(--spacing-comp-01);
    margin-inline-end: 0;
    &::before {
      background-color: var(--gray-04);
      -webkit-mask-position: center;
      -webkit-mask-repeat: no-repeat;
    }
    &:hover {
      background-color: var(--color-background);
    }
    &:focus {
      @include form-element-common-styles-focus-type-1("outside");
    }
  }

  //focus-within
  &::part(checkbox__container):focus-within {
  }
  //checkbox
  &::part(checkbox) {
    margin-inline-end: 0;
  }
  &::part(checkbox__container) {
    @include checkbox("container");
  }
  &::part(checkbox__input) {
    @include checkbox("input");
  }
  &::part(checkbox__option) {
    @include checkbox("option");
  }
  //focus
  &::part(checkbox__input) + .option {
    background-color: red;
  }
  &::part(checkbox__container checkbox__option) {
    @include form-element-common-styles-focus-type-1();
  }
  //checked
  &::part(checkbox__option checkbox__checked) {
    @include checkbox("option--checked");
  }
  //indeterminate
  &::part(checkbox__option checkbox__indeterminate) {
    @include checkbox("option--indeterminate");
  }

  //action
  &::part(action) {
    text-transform: capitalize;
    display: flex;
    gap: var(--spacing-comp-01);
    //margin-inline-start: var(--spacing-comp-01);
  }
  //action / left-img
  &::part(left-img) {
    width: var(--spacing-comp-04);
    height: var(--spacing-comp-04);
    margin-inline-end: 0;
  }

  //downloading
  &::part(downloading) {
    width: var(--spacing-comp-03);
    height: var(--spacing-comp-03);
    //border: var(--border-radius-sm) solid var(--color-primary-enabled);
    //border-color: var(--color-primary-enabled);
    border: var(--border-width-md) solid var(--color-primary-enabled);
    border-inline-start-color: transparent;
  }
}

.ch-tree-x-drag-info {
  //to do
  padding-inline: 6px;
  padding-block: 2px;
  background-color: rgb(207, 222, 230);
  border: 1px solid rgb(2, 102, 160);
  border-radius: 10px;
  font-size: 8px;
}
