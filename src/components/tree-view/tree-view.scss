@import "../../globals/mixins.scss";

/*---------------------------
gxg-tree-view
---------------------------*/
gxg-tree-view {
  font-family: var(--font-family-primary);
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-regular);
  color: var(--color-on-background);
  display: contents;
}

/*---------------------------
.tree-view
---------------------------*/
.tree-view {
  @include gxg-scrollbar;

  .ch-tree-view-container {
    padding: 7px; /*although this value does not exists in gemini ds space tokens, it is the value that works best with gx-ide*/
  }
}

/*---------------------------
.tree-view-item
---------------------------*/
.tree-view-item {
  /*-- Css Variables ---*/
  --checkbox-size: var(--gxg-checkbox-size);
  --expandable-button-width: var(--spacing-comp-04);

  /*-- Parts ---*/
  &::part(dashed-line) {
    border-color: var(--gray-02);
  }

  //header
  &::part(header) {
    padding-inline-end: calc(var(--spacing-comp-02) * 0.65);
    height: var(--spacing-comp-05);
    display: flex;
    gap: 5px;

    &:first-child {
      margin-inline-start: var(--spacing-comp-01);
    }
    &:before {
      content: "";
      display: block;
    }
    &:hover {
      background-color: var(--gxg-background-color--hover);
      color: var(--gxg-color--hover);
    }
    &:focus {
      @include form-element-common-styles-focus-type-1();
    }
  }
  &[selected]::part(header) {
    background-color: var(--gxg-background-color--selected);
    &:hover {
      background-color: var(--gxg-background-color--selected-hover);
    }
  }

  //expandable-button
  &::part(expandable-button) {
    background-color: var(--gray-00);
    margin-inline-end: 0;
    &::before {
      background-color: var(--gray-04);
      -webkit-mask-position: center;
      -webkit-mask-repeat: no-repeat;
    }
    &:hover {
      background-color: var(--color-background);
    }
    &:focus {
      @include form-element-common-styles-focus-type-1("outside");
    }
  }

  //action
  &::part(action) {
    text-transform: capitalize;
    display: flex;
    gap: var(--spacing-comp-01);
    //margin-inline-start: var(--spacing-comp-01);
  }

  //action / left-img
  &::part(left-img) {
    width: var(--spacing-comp-04);
    height: var(--spacing-comp-04);
    margin-inline-end: 0;
  }

  //downloading
  &::part(downloading) {
    width: var(--spacing-comp-03);
    height: var(--spacing-comp-03);
    //border: var(--border-radius-sm) solid var(--color-primary-enabled);
    //border-color: var(--color-primary-enabled);
    border: var(--border-width-md) solid var(--color-primary-enabled);
    border-inline-start-color: transparent;
  }

  /*-- Parts for checkbox ---*/
  //container
  &::part(checkbox__container) {
    @include checkbox("container");
  }
  //focus
  &::part(checkbox__container):focus-within {
    box-shadow: none;
    @include form-element-common-styles-focus-type-1();
  }
  //checkbox
  &::part(checkbox) {
    margin-inline-end: 0;
  }
  &::part(checkbox__option) {
    @include checkbox("option");
  }
  /*checked*/
  &::part(checkbox__container checkbox__checked) {
    @include checkbox("container--checked");
  }
  /*indeterminate*/
  &::part(checkbox__container checkbox__indeterminate) {
    @include checkbox("container--indeterminate");
  }
  &::part(checkbox__input) {
    @include checkbox("input");
  }

  /*-- Dynamic Icons ---*/
  &--folder::part(action)::before,
  &--module::part(action)::before {
    grid-area: left-img;
    content: "";
    width: 14px;
    height: 14px;
    margin-inline-end: 4px;
    background-repeat: no-repeat;
  }
  //folder
  &--folder::part(action)::before {
    background-image: url("/build/icon-assets/objects/folder.svg");
  }
  &--folder::part(action expanded)::before {
    background-image: url("/build/icon-assets/objects/folder-open.svg");
  }
  //module
  &--module::part(action)::before {
    background-image: url("/build/icon-assets/objects/module.svg");
  }
  &--module::part(action expanded)::before {
    background-image: url("/build/icon-assets/objects/module-open.svg");
  }

  /*-- Other ---*/
  //pending commit
  &--pending-commit::part(action)::before {
    content: "";
    position: relative;
    z-index: 1;
    grid-area: left-img;
    width: 5px;
    height: 5px;
    align-self: end;
    margin-block-end: 3px;
    margin-inline-start: 1px;
    background-color: var(--color-primary-enabled);
    border-radius: 50%;
  }
}

/*-- Other Selectors (these depend on the tag class name)---*/
.tree-view-item {
  &--editing::part(header) {
    border: 2px solid transparent;
    //to do
    // background-color: rgb(207, 222, 230, 0.5);
    // border-color: transparent;
  }
  &--drag-enter {
    //to do
    // background-color: #eee;
    // box-shadow: inset 0 0 1px 0px black;

    // &[selected]::part(header) {
    //   background-color: #eee;
    // }
  }
  &:not(.ch-tree-view-item--editing)::part(header):focus-visible {
    //to do
    // border-color: black;
    // z-index: 1; // Place the outline above the content
  }
}

/*--- Revisar ---*/
.tree-view .ch-tree-view-drag-info {
  //to do
  padding-inline: 6px;
  padding-block: 2px;
  background-color: rgb(207, 222, 230);
  border: 1px solid rgb(2, 102, 160);
  border-radius: 10px;
  font-size: 8px;
}
:not(.ch-tree-view-dragging-item)
  ch-tree-view-item:not([selected])::part(header):hover {
  //to do
  // background-color: rgb(232, 232, 233);
}
