@import "../../globals/normalize.scss";
@import "../../globals/mixins";

/*****************************************************
'PRIMARY TEXT ONLY' && 'PRIMARY TEXT ICON' BUTTON TYPE
*****************************************************/

:host {
  display: inline-block;
}
:host(.button) .button-native {
  @include gxg-label;
  background: var(--color-primary-enabled);
  border: 0;
  box-shadow: inset 0px 0px 0px 1px transparent;
  border-radius: var(--border-radius-sm);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding-top: 0;
  padding-right: var(--spacing-comp-05);
  padding-bottom: 0;
  padding-left: var(--spacing-comp-05);
  min-height: var(--spacing-comp-05);
  line-height: var(--line-height-regular);

  //if button has icon:
  ::slotted([slot="icon"]) {
    width: var(--icon-size);
    height: var(--icon-size);
    margin-right: var(--spacing-comp-01);
    display: inline-block;
  }

  &:hover:not([disabled]) {
    background: var(--color-primary-hover);
    cursor: pointer;
  }
  &:focus:not([disabled]) {
    background: var(--color-primary-enabled);
    box-shadow: var(--box-shadow-values) var(--color-primary-active);
    outline: none;
  }
  &:active:not([disabled]) {
    background: var(--color-primary-active);
  }

  //Transition
  transition: background $ui-animaton-speed $ui-animation-timing-function,
    color $ui-animaton-speed $ui-animation-timing-function,
    box-shadow $ui-animaton-speed $ui-animation-timing-function;
}
:host(.button.button--disabled) .button-native {
  background: var(--color-primary-disabled);
  @include gxg-label--disabled;
  cursor: not-allowed;

  //if button has icon:
  ::slotted([slot="icon"]) {
    opacity: var(--icon-hover-opacity);
  }
}

/*********************************
PRIMARY 'TEXT ONLY' BUTTON TYPE
*********************************/
:host(.button--primary-text-only) .button-native {
  @include gxg-label--negative;
}
:host(.button--primary-text-only.button--disabled) .button-native {
  @include gxg-label--negative-disabled;
}

/*********************************
PRIMARY 'TEXT + ICON' BUTTON TYPE
*********************************/
:host(.button--primary-text-icon) .button-native {
  @include gxg-label--negative;

  //Redefine icon color for this button type
  ::slotted([slot="icon"]) {
    --icon-color: #{$gxg-label--negative-color};
  }
}
:host(.button--primary-text-icon.button--disabled) .button-native {
  @include gxg-label--negative-disabled;
  //Redefine icon color for this button type
  ::slotted([slot="icon"]) {
    --icon-color: #{$gxg-label--negative-disabled-color};
  }
}

/*********************************
'PRIMARY ICON ONLY' BUTTON TYPE
*********************************/
:host(.button--primary-icon-only) .button-native {
  //Redefine icon color for this button type
  //--button-icon-color: var(--color-on-primary);

  background: var(--color-primary-enabled);
  color: var(--color-white);

  &:hover:not([disabled]) {
    background: var(--color-primary-hover);
    @include gxg-label--hover;
  }
  &:focus:not([disabled]) {
    background: var(--color-primary-enabled);
    @include gxg-label--hover;
  }
  &:active:not([disabled]) {
    background: var(--color-primary-active);
    color: var(--color-white);
  }

  ::slotted([slot="icon"]) {
    margin-right: 0;
    --icon-color: #{$gxg-label--negative-color};
  }

  padding-right: 0;
  padding-left: 0;

  min-width: var(--spacing-comp-05);

  &:focus {
    outline: none;
  }
}
:host(.button--primary-icon-only.button--disabled) .button-native {
  ::slotted([slot="icon"]) {
    --icon-color: #{$gxg-label--negative-disabled-color};
  }
}

/*********************************
SECONDARY 'TEXT ONLY' BUTTON TYPE
*********************************/
:host(.button--secondary-text-only) .button-native {
  // This are the styles for 'secondary button' type.

  //Enabled
  background: transparent;

  &:hover:not([disabled]) {
    @include gxg-label--hover;
    background: rgba(var(--color-primary-hover-rgb), 0.1);
  }
  &:focus:not([disabled]) {
    @include gxg-label--focus;
    background: transparent;
    box-shadow: var(--box-shadow-values) $gxg-label--focus-color;
  }
  &:active:not([disabled]) {
    @include gxg-label--active;
    box-shadow: none;
  }

  padding-right: var(--spacing-comp-04);
  padding-left: var(--spacing-comp-04);

  &:focus {
    outline: none;
  }
}
:host(.button--secondary-text-only.button--disabled) .button-native {
  background: transparent;
  @include gxg-label--disabled;
}

/*********************************
SECONDARY 'TEXT ICON' BUTTON TYPE
*********************************/
:host(.button--secondary-text-icon) .button-native {
  // This are the styles for 'secondary button' type.

  //Enabled
  background: transparent;

  //Redefine icon color for this button type
  ::slotted([slot="icon"]) {
    --icon-color: #{$gxg-label-color};
  }

  &:hover:not([disabled]) {
    @include gxg-label--hover;
    background: rgba(var(--color-primary-hover-rgb), 0.1);
    ::slotted([slot="icon"]) {
      --icon-color: #{$gxg-label--hover-color};
    }
  }
  &:focus:not([disabled]) {
    @include gxg-label--focus;
    background: transparent;
    box-shadow: var(--box-shadow-values) $gxg-label--focus-color;
    ::slotted([slot="icon"]) {
      --icon-color: #{$gxg-label--focus-color};
    }
  }
  &:active:not([disabled]) {
    @include gxg-label--active;
    box-shadow: none;
    ::slotted([slot="icon"]) {
      --icon-color: #{$gxg-label--active-color};
    }
  }

  padding-right: var(--spacing-comp-02);
  padding-left: var(--spacing-comp-02);

  &:focus {
    outline: none;
  }
}
:host(.button--secondary-text-icon.button--disabled) .button-native {
  //Redefine icon color for this button type
  ::slotted([slot="icon"]) {
    --icon-color: #{$gxg-label--disabled-color};
  }

  background: transparent;
  @include gxg-label--disabled;
}

/*********************************
'SECONDARY ICON ONLY' BUTTON TYPE
*********************************/
:host(.button--secondary-icon-only) .button-native {
  ::slotted([slot="icon"]) {
    --icon-color: #{$gxg-label-color};
    margin-right: 0;
  }
  &:hover:not([disabled]) {
    background: transparent;
    ::slotted([slot="icon"]) {
      --icon-color: #{$gxg-label--hover-color};
    }
  }
  &:focus:not([disabled]) {
    background: transparent;
    box-shadow: var(--box-shadow-values) $gxg-label--focus-color;
    ::slotted([slot="icon"]) {
      --icon-color: #{$gxg-label--focus-color};
    }
  }
  &:active:not([disabled]) {
    background: transparent;
    ::slotted([slot="icon"]) {
      --icon-color: #{$gxg-label--active-color};
    }
  }

  background: transparent;
  padding-right: 0;
  padding-left: 0;
  width: var(--spacing-comp-04);
  height: var(--spacing-comp-04);
  min-width: var(--spacing-comp-04);
  min-height: var(--spacing-comp-04);
}
:host(.button--secondary-icon-only.button--disabled) .button-native {
  background: transparent;
  ::slotted([slot="icon"]) {
    --icon-color: #{$gxg-label--disabled-color};
  }
}

/*********************************
'OUTLINED' BUTTON TYPE
*********************************/
:host(.button--outlined) .button-native {
  // This are the styles for 'outlined button' type.

  box-shadow: inset 0px 0px 0px 1px $gxg-label-color;

  //Enabled
  background: var(--color-white);
  padding-left: var(--spacing-comp-05);
  padding-right: var(--spacing-comp-05);

  &:hover:not([disabled]) {
    @include gxg-label--hover;
    background: transparent;
    box-shadow: inset 0px 0px 0px 1px $gxg-label--hover-color;
  }
  &:focus:not([disabled]) {
    @include gxg-label--focus;
    background: transparent;
    box-shadow: inset 0px 0px 0px 2px $gxg-label--focus-color;
  }
  &:active:not([disabled]) {
    @include gxg-label--active;
    background: transparent;
    box-shadow: inset 0px 0px 0px 1px $gxg-label--active-color;
  }
}
:host(.button--outlined.button--disabled) .button-native {
  box-shadow: inset 0px 0px 0px 1px $gxg-label--disabled-color;
  background: var(--color-transparent);
  @include gxg-label--disabled;
}
